;;
;; This file was generated by the Retargetable Decompiler
;; Website: https://retdec.com
;; Copyright (c) 2017 Retargetable Decompiler <info@retdec.com>
;;
;; Decompiler release: v2.2.1 (2016-09-07)
;; Decompilation date: 2017-05-02 02:29:44
;; Architecture: x86 (or later and compatible)
;;

;;
;; Code Segment
;;

; section: .init
; function: _init at 0x8048540 -- 0x8048562
0x8048540:   53                        	push ebx
0x8048541:   83 ec 08                  	sub esp, 0x8
0x8048544:   e8 a7 01 00 00            	call 0x80486f0 <__x86.get_pc_thunk.bx>
0x8048549:   81 c3 0b 1d 00 00         	add ebx, 0x1d0b
0x804854f:   8b 83 fc ff ff ff         	mov eax, dword [ ebx + 0xfffffffc ]
0x8048555:   85 c0                     	test eax, eax
0x8048557:   74 05                     	jz 0x804855e <_init+0x1e>
0x8048559:   e8 b2 00 00 00            	call 0x8048610 <__gmon_start>
0x804855e:   83 c4 08                  	add esp, 0x8
0x8048561:   5b                        	pop ebx
0x8048562:   c3                        	ret
; section: .plt
; function: function_8048570 at 0x8048570 -- 0x80486bf
0x8048570:   ff 35 58 a2 04 08         	push dword [ 0x804a258 ]
0x8048576:   ff 25 5c a2 04 08         	jmp dword [ 0x804a25c ]
0x804857c:   00 00                     	add byte [ eax ], al
0x804857e:   00 00                     	add byte [ eax ], al
0x8048580:   ff 25 60 a2 04 08         	jmp dword [ 0x804a260 ]
0x8048586:   68 00 00 00 00            	push 0x0
0x804858b:   e9 e0 ff ff ff            	jmp 0xffffffe0
0x8048590:   ff 25 64 a2 04 08         	jmp dword [ 0x804a264 ]
0x8048596:   68 08 00 00 00            	push 0x8
0x804859b:   e9 d0 ff ff ff            	jmp 0xffffffd0
0x80485a0:   ff 25 68 a2 04 08         	jmp dword [ 0x804a268 ]
0x80485a6:   68 10 00 00 00            	push 0x10
0x80485ab:   e9 c0 ff ff ff            	jmp 0xffffffc0
0x80485b0:   ff 25 6c a2 04 08         	jmp dword [ 0x804a26c ]
0x80485b6:   68 18 00 00 00            	push 0x18
0x80485bb:   e9 b0 ff ff ff            	jmp 0xffffffb0
0x80485c0:   ff 25 70 a2 04 08         	jmp dword [ 0x804a270 ]
0x80485c6:   68 20 00 00 00            	push 0x20
0x80485cb:   e9 a0 ff ff ff            	jmp 0xffffffa0
0x80485d0:   ff 25 74 a2 04 08         	jmp dword [ 0x804a274 ]
0x80485d6:   68 28 00 00 00            	push 0x28
0x80485db:   e9 90 ff ff ff            	jmp 0xffffff90
0x80485e0:   ff 25 78 a2 04 08         	jmp dword [ 0x804a278 ]
0x80485e6:   68 30 00 00 00            	push 0x30
0x80485eb:   e9 80 ff ff ff            	jmp 0xffffff80
0x80485f0:   ff 25 7c a2 04 08         	jmp dword [ 0x804a27c ]
0x80485f6:   68 38 00 00 00            	push 0x38
0x80485fb:   e9 70 ff ff ff            	jmp 0xffffff70
0x8048600:   ff 25 80 a2 04 08         	jmp dword [ 0x804a280 ]
0x8048606:   68 40 00 00 00            	push 0x40
0x804860b:   e9 60 ff ff ff            	jmp 0xffffff60
0x8048610:   ff 25 84 a2 04 08         	jmp dword [ 0x804a284 ]
0x8048616:   68 48 00 00 00            	push 0x48
0x804861b:   e9 50 ff ff ff            	jmp 0xffffff50
0x8048620:   ff 25 88 a2 04 08         	jmp dword [ 0x804a288 ]
0x8048626:   68 50 00 00 00            	push 0x50
0x804862b:   e9 40 ff ff ff            	jmp 0xffffff40
0x8048630:   ff 25 8c a2 04 08         	jmp dword [ 0x804a28c ]
0x8048636:   68 58 00 00 00            	push 0x58
0x804863b:   e9 30 ff ff ff            	jmp 0xffffff30
0x8048640:   ff 25 90 a2 04 08         	jmp dword [ 0x804a290 ]
0x8048646:   68 60 00 00 00            	push 0x60
0x804864b:   e9 20 ff ff ff            	jmp 0xffffff20
0x8048650:   ff 25 94 a2 04 08         	jmp dword [ 0x804a294 ]
0x8048656:   68 68 00 00 00            	push 0x68
0x804865b:   e9 10 ff ff ff            	jmp 0xffffff10
0x8048660:   ff 25 98 a2 04 08         	jmp dword [ 0x804a298 ]
0x8048666:   68 70 00 00 00            	push 0x70
0x804866b:   e9 00 ff ff ff            	jmp 0xffffff00
0x8048670:   ff 25 9c a2 04 08         	jmp dword [ 0x804a29c ]
0x8048676:   68 78 00 00 00            	push 0x78
0x804867b:   e9 f0 fe ff ff            	jmp 0xfffffef0
0x8048680:   ff 25 a0 a2 04 08         	jmp dword [ 0x804a2a0 ]
0x8048686:   68 80 00 00 00            	push 0x80
0x804868b:   e9 e0 fe ff ff            	jmp 0xfffffee0
0x8048690:   ff 25 a4 a2 04 08         	jmp dword [ 0x804a2a4 ]
0x8048696:   68 88 00 00 00            	push 0x88
0x804869b:   e9 d0 fe ff ff            	jmp 0xfffffed0
0x80486a0:   ff 25 a8 a2 04 08         	jmp dword [ 0x804a2a8 ]
0x80486a6:   68 90 00 00 00            	push 0x90
0x80486ab:   e9 c0 fe ff ff            	jmp 0xfffffec0
0x80486b0:   ff 25 ac a2 04 08         	jmp dword [ 0x804a2ac ]
0x80486b6:   68 98 00 00 00            	push 0x98
0x80486bb:   e9 b0 fe ff ff            	jmp 0xfffffeb0
; section: .text
; function: _start at 0x80486c0 -- 0x80486ef
0x80486c0:   31 ed                     	xor ebp, ebp
0x80486c2:   5e                        	pop esi
0x80486c3:   89 e1                     	mov ecx, esp
0x80486c5:   83 e4 f0                  	and esp, 0xfffffff0
0x80486c8:   50                        	push eax
0x80486c9:   54                        	push esp
0x80486ca:   52                        	push edx
0x80486cb:   68 c0 8c 04 08            	push 0x8048cc0
0x80486d0:   68 50 8c 04 08            	push 0x8048c50
0x80486d5:   51                        	push ecx
0x80486d6:   56                        	push esi
0x80486d7:   68 24 8c 04 08            	push 0x8048c24
0x80486dc:   e8 4f ff ff ff            	call 0x8048630 <__libc_start_main>
0x80486e1:   f4                        	hlt
0x80486e2:   66 90                     	xchg ax, ax
0x80486e4:   66 90                     	xchg ax, ax
0x80486e6:   66 90                     	xchg ax, ax
0x80486e8:   66 90                     	xchg ax, ax
0x80486ea:   66 90                     	xchg ax, ax
0x80486ec:   66 90                     	xchg ax, ax
0x80486ee:   66 90                     	xchg ax, ax
; function: __x86.get_pc_thunk.bx at 0x80486f0 -- 0x80486ff
0x80486f0:   8b 1c 24                  	mov ebx, dword [ esp ]
0x80486f3:   c3                        	ret
0x80486f4:   66 90                     	xchg ax, ax
0x80486f6:   66 90                     	xchg ax, ax
0x80486f8:   66 90                     	xchg ax, ax
0x80486fa:   66 90                     	xchg ax, ax
0x80486fc:   66 90                     	xchg ax, ax
0x80486fe:   66 90                     	xchg ax, ax
; function: deregister_tm_clones at 0x8048700 -- 0x804872f
0x8048700:   b8 bb a2 04 08            	mov eax, 0x804a2bb
0x8048705:   2d b8 a2 04 08            	sub eax, 0x804a2b8
0x804870a:   83 f8 06                  	cmp eax, 0x6
0x804870d:   77 01                     	ja 0x8048710 <deregister_tm_clones+0x10>
0x804870f:   c3                        	ret
0x8048710:   b8 00 00 00 00            	mov eax, 0x0
0x8048715:   85 c0                     	test eax, eax
0x8048717:   74 f6                     	jz 0x804870f <deregister_tm_clones+0xf>
0x8048719:   55                        	push ebp
0x804871a:   89 e5                     	mov ebp, esp
0x804871c:   83 ec 18                  	sub esp, 0x18
0x804871f:   c7 04 24 b8 a2 04 08      	mov dword [ esp ], 0x804a2b8
0x8048726:   ff d0                     	call eax
0x8048728:   c9                        	leave
0x8048729:   c3                        	ret
0x804872a:   8d b6 00 00 00 00         	lea esi, dword [ esi + 0x0 ]
; function: register_tm_clones at 0x8048730 -- 0x8048766
0x8048730:   b8 b8 a2 04 08            	mov eax, 0x804a2b8
0x8048735:   2d b8 a2 04 08            	sub eax, 0x804a2b8
0x804873a:   c1 f8 02                  	sar eax, 0x2
0x804873d:   89 c2                     	mov edx, eax
0x804873f:   c1 ea 1f                  	shr edx, 0x1f
0x8048742:   01 d0                     	add eax, edx
0x8048744:   d1 f8                     	sar eax, 1
0x8048746:   75 01                     	jnz 0x8048749 <register_tm_clones+0x19>
0x8048748:   c3                        	ret
0x8048749:   ba 00 00 00 00            	mov edx, 0x0
0x804874e:   85 d2                     	test edx, edx
0x8048750:   74 f6                     	jz 0x8048748 <register_tm_clones+0x18>
0x8048752:   55                        	push ebp
0x8048753:   89 e5                     	mov ebp, esp
0x8048755:   83 ec 18                  	sub esp, 0x18
0x8048758:   89 44 24 04               	mov dword [ esp + 0x4 ], eax
0x804875c:   c7 04 24 b8 a2 04 08      	mov dword [ esp ], 0x804a2b8
0x8048763:   ff d2                     	call edx
0x8048765:   c9                        	leave
0x8048766:   c3                        	ret
; function: function_8048767 at 0x8048767 -- 0x804876f
0x8048767:   89 f6                     	mov esi, esi
0x8048769:   8d bc 27 00 00 00 00      	lea edi, dword [ edi + 0x0 ]
; function: __do_global_dtors_aux at 0x8048770 -- 0x804878f
0x8048770:   80 3d e4 a2 04 08 00      	cmp byte [ 0x804a2e4 ], 0x0
0x8048777:   75 13                     	jnz 0x804878c <__do_global_dtors_aux+0x1c>
0x8048779:   55                        	push ebp
0x804877a:   89 e5                     	mov ebp, esp
0x804877c:   83 ec 08                  	sub esp, 0x8
0x804877f:   e8 7c ff ff ff            	call 0x8048700 <deregister_tm_clones>
0x8048784:   c6 05 e4 a2 04 08 01      	mov byte [ 0x804a2e4 ], 0x1
0x804878b:   c9                        	leave
0x804878c:   f3 c3                     	rep ret
0x804878e:   66 90                     	xchg ax, ax
; function: frame_dummy at 0x8048790 -- 0x80487bc
0x8048790:   a1 64 a1 04 08            	mov eax, dword [ 0x804a164 ]
0x8048795:   85 c0                     	test eax, eax
0x8048797:   74 1f                     	jz 0x80487b8 <frame_dummy+0x28>
0x8048799:   b8 00 00 00 00            	mov eax, 0x0
0x804879e:   85 c0                     	test eax, eax
0x80487a0:   74 16                     	jz 0x80487b8 <frame_dummy+0x28>
0x80487a2:   55                        	push ebp
0x80487a3:   89 e5                     	mov ebp, esp
0x80487a5:   83 ec 18                  	sub esp, 0x18
0x80487a8:   c7 04 24 64 a1 04 08      	mov dword [ esp ], 0x804a164
0x80487af:   ff d0                     	call eax
0x80487b1:   c9                        	leave
0x80487b2:   e9 79 ff ff ff            	jmp 0x8048730 <register_tm_clones>
0x80487b7:   90                        	nop
0x80487b8:   e9 73 ff ff ff            	jmp 0x8048730 <register_tm_clones>
; function: partial_write at 0x80487bd -- 0x8048856
0x80487bd:   55                        	push ebp
0x80487be:   89 e5                     	mov ebp, esp
0x80487c0:   83 ec 28                  	sub esp, 0x28
0x80487c3:   8b 45 0c                  	mov eax, dword [ ebp + 0xc ]
0x80487c6:   85 c0                     	test eax, eax
0x80487c8:   79 24                     	jns 0x80487ee <partial_write+0x31>
0x80487ca:   c7 44 24 0c 30 8f 04 08   	mov dword [ esp + 0xc ], 0x8048f30 ; "partial_write"
0x80487d2:   c7 44 24 08 20 00 00 00   	mov dword [ esp + 0x8 ], 0x20
0x80487da:   c7 44 24 04 e0 8c 04 08   	mov dword [ esp + 0x4 ], 0x8048ce0 ; "utils.h"
0x80487e2:   c7 04 24 e8 8c 04 08      	mov dword [ esp ], 0x8048ce8 ; "len <= 2147483647L"
0x80487e9:   e8 c2 fe ff ff            	call 0x80486b0 <__assert_fail>
0x80487ee:   8b 45 08                  	mov eax, dword [ ebp + 0x8 ]
0x80487f1:   89 45 f4                  	mov dword [ ebp + 0xfffffff4 ], eax
0x80487f4:   8b 45 0c                  	mov eax, dword [ ebp + 0xc ]
0x80487f7:   89 44 24 08               	mov dword [ esp + 0x8 ], eax
0x80487fb:   8b 45 f4                  	mov eax, dword [ ebp + 0xfffffff4 ]
0x80487fe:   89 44 24 04               	mov dword [ esp + 0x4 ], eax
0x8048802:   c7 04 24 01 00 00 00      	mov dword [ esp ], 0x1
0x8048809:   e8 32 fe ff ff            	call 0x8048640 <write>
0x804880e:   89 45 f0                  	mov dword [ ebp + 0xfffffff0 ], eax
0x8048811:   83 7d f0 04               	cmp dword [ ebp + 0xfffffff0 ], 0x4
0x8048815:   74 dd                     	jz 0x80487f4 <partial_write+0x37>
0x8048817:   83 7d f0 ff               	cmp dword [ ebp + 0xfffffff0 ], 0xffffffff
0x804881b:   75 14                     	jnz 0x8048831 <partial_write+0x74>
0x804881d:   c7 44 24 04 fb 8c 04 08   	mov dword [ esp + 0x4 ], 0x8048cfb ; "Write error!"
0x8048825:   c7 04 24 78 00 00 00      	mov dword [ esp ], 0x78
0x804882c:   e8 bf fd ff ff            	call 0x80485f0 <err>
0x8048831:   83 7d f0 00               	cmp dword [ ebp + 0xfffffff0 ], 0x0
0x8048835:   75 02                     	jnz 0x8048839 <partial_write+0x7c>
0x8048837:   eb 12                     	jmp 0x804884b <partial_write+0x8e>
0x8048839:   8b 45 f0                  	mov eax, dword [ ebp + 0xfffffff0 ]
0x804883c:   29 45 0c                  	sub dword [ ebp + 0xc ], eax
0x804883f:   8b 45 f0                  	mov eax, dword [ ebp + 0xfffffff0 ]
0x8048842:   01 45 f4                  	add dword [ ebp + 0xfffffff4 ], eax
0x8048845:   83 7d 0c 00               	cmp dword [ ebp + 0xc ], 0x0
0x8048849:   75 a9                     	jnz 0x80487f4 <partial_write+0x37>
0x804884b:   8b 55 f4                  	mov edx, dword [ ebp + 0xfffffff4 ]
0x804884e:   8b 45 08                  	mov eax, dword [ ebp + 0x8 ]
0x8048851:   29 c2                     	sub edx, eax
0x8048853:   89 d0                     	mov eax, edx
0x8048855:   c9                        	leave
0x8048856:   c3                        	ret
; function: out at 0x8048857 -- 0x804888b
0x8048857:   55                        	push ebp
0x8048858:   89 e5                     	mov ebp, esp
0x804885a:   83 ec 18                  	sub esp, 0x18
0x804885d:   8b 45 0c                  	mov eax, dword [ ebp + 0xc ]
0x8048860:   89 44 24 04               	mov dword [ esp + 0x4 ], eax
0x8048864:   8b 45 08                  	mov eax, dword [ ebp + 0x8 ]
0x8048867:   89 04 24                  	mov dword [ esp ], eax
0x804886a:   e8 4e ff ff ff            	call 0x80487bd <partial_write>
0x804886f:   8b 55 0c                  	mov edx, dword [ ebp + 0xc ]
0x8048872:   39 d0                     	cmp eax, edx
0x8048874:   74 14                     	jz 0x804888a <out+0x33>
0x8048876:   c7 44 24 04 08 8d 04 08   	mov dword [ esp + 0x4 ], 0x8048d08 ; "Couldn't write all the data!"
0x804887e:   c7 04 24 78 00 00 00      	mov dword [ esp ], 0x78
0x8048885:   e8 e6 fd ff ff            	call 0x8048670 <errx>
0x804888a:   c9                        	leave
0x804888b:   c3                        	ret
; function: string_out at 0x804888c -- 0x80488ad
0x804888c:   55                        	push ebp
0x804888d:   89 e5                     	mov ebp, esp
0x804888f:   83 ec 18                  	sub esp, 0x18
0x8048892:   8b 45 08                  	mov eax, dword [ ebp + 0x8 ]
0x8048895:   89 04 24                  	mov dword [ esp ], eax
0x8048898:   e8 83 fd ff ff            	call 0x8048620 <strlen>
0x804889d:   89 44 24 04               	mov dword [ esp + 0x4 ], eax
0x80488a1:   8b 45 08                  	mov eax, dword [ ebp + 0x8 ]
0x80488a4:   89 04 24                  	mov dword [ esp ], eax
0x80488a7:   e8 ab ff ff ff            	call 0x8048857 <out>
0x80488ac:   c9                        	leave
0x80488ad:   c3                        	ret
; function: service_example at 0x80488ae -- 0x8048920
0x80488ae:   55                        	push ebp
0x80488af:   89 e5                     	mov ebp, esp
0x80488b1:   83 ec 28                  	sub esp, 0x28
0x80488b4:   c7 04 24 28 8d 04 08      	mov dword [ esp ], 0x8048d28 ; "Hi! Welcome to our note storage service"
0x80488bb:   e8 40 fd ff ff            	call 0x8048600 <puts>
0x80488c0:   c7 04 24 50 8d 04 08      	mov dword [ esp ], 0x8048d50 ; "Want to (R)ead or (W)rite a note?"
0x80488c7:   e8 34 fd ff ff            	call 0x8048600 <puts>
0x80488cc:   a1 e0 a2 04 08            	mov eax, dword [ 0x804a2e0 ]
0x80488d1:   89 04 24                  	mov dword [ esp ], eax
0x80488d4:   e8 c7 fc ff ff            	call 0x80485a0 <fflush>
0x80488d9:   a1 c0 a2 04 08            	mov eax, dword [ 0x804a2c0 ]
0x80488de:   89 44 24 08               	mov dword [ esp + 0x8 ], eax
0x80488e2:   c7 44 24 04 03 00 00 00   	mov dword [ esp + 0x4 ], 0x3
0x80488ea:   8d 45 f3                  	lea eax, dword [ ebp + 0xfffffff3 ]
0x80488ed:   89 04 24                  	mov dword [ esp ], eax
0x80488f0:   e8 cb fc ff ff            	call 0x80485c0 <fgets>
0x80488f5:   0f b6 45 f3               	movzx eax, byte [ ebp + 0xfffffff3 ]
0x80488f9:   3c 52                     	cmp al, 0x52
0x80488fb:   75 07                     	jnz 0x8048904 <service_example+0x56>
0x80488fd:   e8 1f 00 00 00            	call 0x8048921 <read_note>
0x8048902:   eb 1b                     	jmp 0x804891f <service_example+0x71>
0x8048904:   0f b6 45 f3               	movzx eax, byte [ ebp + 0xfffffff3 ]
0x8048908:   3c 57                     	cmp al, 0x57
0x804890a:   75 07                     	jnz 0x8048913 <service_example+0x65>
0x804890c:   e8 10 01 00 00            	call 0x8048a21 <write_note>
0x8048911:   eb 0c                     	jmp 0x804891f <service_example+0x71>
0x8048913:   c7 04 24 74 8d 04 08      	mov dword [ esp ], 0x8048d74 ; "What was that??? I don't know what that means!\n"
0x804891a:   e8 6d ff ff ff            	call 0x804888c <string_out>
0x804891f:   c9                        	leave
0x8048920:   c3                        	ret
; function: read_note at 0x8048921 -- 0x8048a20
0x8048921:   55                        	push ebp
0x8048922:   89 e5                     	mov ebp, esp
0x8048924:   81 ec 28 01 00 00         	sub esp, 0x128
0x804892a:   c7 04 24 a4 8d 04 08      	mov dword [ esp ], 0x8048da4 ; "Please send: note_id password"
0x8048931:   e8 ca fc ff ff            	call 0x8048600 <puts>
0x8048936:   a1 e0 a2 04 08            	mov eax, dword [ 0x804a2e0 ]
0x804893b:   89 04 24                  	mov dword [ esp ], eax
0x804893e:   e8 5d fc ff ff            	call 0x80485a0 <fflush>
0x8048943:   8d 45 b4                  	lea eax, dword [ ebp + 0xffffffb4 ]
0x8048946:   89 44 24 08               	mov dword [ esp + 0x8 ], eax
0x804894a:   8d 85 e8 fe ff ff         	lea eax, dword [ ebp + 0xfffffee8 ]
0x8048950:   89 44 24 04               	mov dword [ esp + 0x4 ], eax
0x8048954:   c7 04 24 c2 8d 04 08      	mov dword [ esp ], 0x8048dc2 ; "%u %200s"
0x804895b:   e8 30 fd ff ff            	call 0x8048690 <scanf>
0x8048960:   83 f8 02                  	cmp eax, 0x2
0x8048963:   74 11                     	jz 0x8048976 <read_note+0x55>
0x8048965:   c7 04 24 cb 8d 04 08      	mov dword [ esp ], 0x8048dcb ; "Can't parse yo stuff!\n"
0x804896c:   e8 1b ff ff ff            	call 0x804888c <string_out>
0x8048971:   e9 a9 00 00 00            	jmp 0x8048a1f <read_note+0xfe>
0x8048976:   8b 85 e8 fe ff ff         	mov eax, dword [ ebp + 0xfffffee8 ]
0x804897c:   89 44 24 08               	mov dword [ esp + 0x8 ], eax
0x8048980:   c7 44 24 04 e2 8d 04 08   	mov dword [ esp + 0x4 ], 0x8048de2 ; "%u_password"
0x8048988:   8d 85 ec fe ff ff         	lea eax, dword [ ebp + 0xfffffeec ]
0x804898e:   89 04 24                  	mov dword [ esp ], eax
0x8048991:   e8 ea fc ff ff            	call 0x8048680 <sprintf>
0x8048996:   8d 85 ec fe ff ff         	lea eax, dword [ ebp + 0xfffffeec ]
0x804899c:   89 04 24                  	mov dword [ esp ], eax
0x804899f:   e8 de 01 00 00            	call 0x8048b82 <read_file>
0x80489a4:   89 45 f4                  	mov dword [ ebp + 0xfffffff4 ], eax
0x80489a7:   8b 45 f4                  	mov eax, dword [ ebp + 0xfffffff4 ]
0x80489aa:   89 44 24 04               	mov dword [ esp + 0x4 ], eax
0x80489ae:   8d 45 b4                  	lea eax, dword [ ebp + 0xffffffb4 ]
0x80489b1:   89 04 24                  	mov dword [ esp ], eax
0x80489b4:   e8 c7 fb ff ff            	call 0x8048580 <strcmp>
0x80489b9:   85 c0                     	test eax, eax
0x80489bb:   74 0e                     	jz 0x80489cb <read_note+0xaa>
0x80489bd:   c7 04 24 ee 8d 04 08      	mov dword [ esp ], 0x8048dee ; "Errr, Wrong password!\n"
0x80489c4:   e8 c3 fe ff ff            	call 0x804888c <string_out>
0x80489c9:   eb 54                     	jmp 0x8048a1f <read_note+0xfe>
0x80489cb:   8b 85 e8 fe ff ff         	mov eax, dword [ ebp + 0xfffffee8 ]
0x80489d1:   89 44 24 08               	mov dword [ esp + 0x8 ], eax
0x80489d5:   c7 44 24 04 05 8e 04 08   	mov dword [ esp + 0x4 ], 0x8048e05 ; "%u"
0x80489dd:   8d 85 ec fe ff ff         	lea eax, dword [ ebp + 0xfffffeec ]
0x80489e3:   89 04 24                  	mov dword [ esp ], eax
0x80489e6:   e8 95 fc ff ff            	call 0x8048680 <sprintf>
0x80489eb:   8d 85 ec fe ff ff         	lea eax, dword [ ebp + 0xfffffeec ]
0x80489f1:   89 04 24                  	mov dword [ esp ], eax
0x80489f4:   e8 89 01 00 00            	call 0x8048b82 <read_file>
0x80489f9:   89 45 f0                  	mov dword [ ebp + 0xfffffff0 ], eax
0x80489fc:   c7 04 24 08 8e 04 08      	mov dword [ esp ], 0x8048e08 ; "Note content: "
0x8048a03:   e8 88 fb ff ff            	call 0x8048590 <printf>
0x8048a08:   8b 45 f0                  	mov eax, dword [ ebp + 0xfffffff0 ]
0x8048a0b:   89 04 24                  	mov dword [ esp ], eax
0x8048a0e:   e8 7d fb ff ff            	call 0x8048590 <printf>
0x8048a13:   c7 04 24 0a 00 00 00      	mov dword [ esp ], 0xa
0x8048a1a:   e8 41 fc ff ff            	call 0x8048660 <putchar>
0x8048a1f:   c9                        	leave
0x8048a20:   c3                        	ret
; function: write_note at 0x8048a21 -- 0x8048afa
0x8048a21:   55                        	push ebp
0x8048a22:   89 e5                     	mov ebp, esp
0x8048a24:   81 ec 68 01 00 00         	sub esp, 0x168
0x8048a2a:   c7 04 24 18 8e 04 08      	mov dword [ esp ], 0x8048e18 ; "Please send: note_id password content"
0x8048a31:   e8 ca fb ff ff            	call 0x8048600 <puts>
0x8048a36:   c7 04 24 40 8e 04 08      	mov dword [ esp ], 0x8048e40 ; "The note_id is an number. No extra whitespace !!"
0x8048a3d:   e8 be fb ff ff            	call 0x8048600 <puts>
0x8048a42:   a1 e0 a2 04 08            	mov eax, dword [ 0x804a2e0 ]
0x8048a47:   89 04 24                  	mov dword [ esp ], eax
0x8048a4a:   e8 51 fb ff ff            	call 0x80485a0 <fflush>
0x8048a4f:   8d 85 7c ff ff ff         	lea eax, dword [ ebp + 0xffffff7c ]
0x8048a55:   89 44 24 0c               	mov dword [ esp + 0xc ], eax
0x8048a59:   8d 45 b8                  	lea eax, dword [ ebp + 0xffffffb8 ]
0x8048a5c:   89 44 24 08               	mov dword [ esp + 0x8 ], eax
0x8048a60:   8d 45 f4                  	lea eax, dword [ ebp + 0xfffffff4 ]
0x8048a63:   89 44 24 04               	mov dword [ esp + 0x4 ], eax
0x8048a67:   c7 04 24 71 8e 04 08      	mov dword [ esp ], 0x8048e71 ; "%u %50s %50s"
0x8048a6e:   e8 1d fc ff ff            	call 0x8048690 <scanf>
0x8048a73:   83 f8 03                  	cmp eax, 0x3
0x8048a76:   74 0e                     	jz 0x8048a86 <write_note+0x65>
0x8048a78:   c7 04 24 7e 8e 04 08      	mov dword [ esp ], 0x8048e7e ; "Can't parse this!\n"
0x8048a7f:   e8 08 fe ff ff            	call 0x804888c <string_out>
0x8048a84:   eb 73                     	jmp 0x8048af9 <write_note+0xd8>
0x8048a86:   8b 45 f4                  	mov eax, dword [ ebp + 0xfffffff4 ]
0x8048a89:   89 44 24 08               	mov dword [ esp + 0x8 ], eax
0x8048a8d:   c7 44 24 04 05 8e 04 08   	mov dword [ esp + 0x4 ], 0x8048e05 ; "%u"
0x8048a95:   8d 85 b4 fe ff ff         	lea eax, dword [ ebp + 0xfffffeb4 ]
0x8048a9b:   89 04 24                  	mov dword [ esp ], eax
0x8048a9e:   e8 dd fb ff ff            	call 0x8048680 <sprintf>
0x8048aa3:   8d 85 7c ff ff ff         	lea eax, dword [ ebp + 0xffffff7c ]
0x8048aa9:   89 44 24 04               	mov dword [ esp + 0x4 ], eax
0x8048aad:   8d 85 b4 fe ff ff         	lea eax, dword [ ebp + 0xfffffeb4 ]
0x8048ab3:   89 04 24                  	mov dword [ esp ], eax
0x8048ab6:   e8 40 00 00 00            	call 0x8048afb <new_file>
0x8048abb:   8b 45 f4                  	mov eax, dword [ ebp + 0xfffffff4 ]
0x8048abe:   89 44 24 08               	mov dword [ esp + 0x8 ], eax
0x8048ac2:   c7 44 24 04 e2 8d 04 08   	mov dword [ esp + 0x4 ], 0x8048de2 ; "%u_password"
0x8048aca:   8d 85 b4 fe ff ff         	lea eax, dword [ ebp + 0xfffffeb4 ]
0x8048ad0:   89 04 24                  	mov dword [ esp ], eax
0x8048ad3:   e8 a8 fb ff ff            	call 0x8048680 <sprintf>
0x8048ad8:   8d 45 b8                  	lea eax, dword [ ebp + 0xffffffb8 ]
0x8048adb:   89 44 24 04               	mov dword [ esp + 0x4 ], eax
0x8048adf:   8d 85 b4 fe ff ff         	lea eax, dword [ ebp + 0xfffffeb4 ]
0x8048ae5:   89 04 24                  	mov dword [ esp ], eax
0x8048ae8:   e8 0e 00 00 00            	call 0x8048afb <new_file>
0x8048aed:   c7 04 24 94 8e 04 08      	mov dword [ esp ], 0x8048e94 ; "Your note is (hopefully) safe with us! Bye!\n"
0x8048af4:   e8 93 fd ff ff            	call 0x804888c <string_out>
0x8048af9:   c9                        	leave
0x8048afa:   c3                        	ret
; function: new_file at 0x8048afb -- 0x8048b81
0x8048afb:   55                        	push ebp
0x8048afc:   89 e5                     	mov ebp, esp
0x8048afe:   83 ec 28                  	sub esp, 0x28
0x8048b01:   c7 44 24 04 c1 8e 04 08   	mov dword [ esp + 0x4 ], 0x8048ec1 ; "wx"
0x8048b09:   8b 45 08                  	mov eax, dword [ ebp + 0x8 ]
0x8048b0c:   89 04 24                  	mov dword [ esp ], eax
0x8048b0f:   e8 3c fb ff ff            	call 0x8048650 <fopen>
0x8048b14:   89 45 f4                  	mov dword [ ebp + 0xfffffff4 ], eax
0x8048b17:   83 7d f4 00               	cmp dword [ ebp + 0xfffffff4 ], 0x0
0x8048b1b:   75 14                     	jnz 0x8048b31 <new_file+0x36>
0x8048b1d:   c7 44 24 04 c4 8e 04 08   	mov dword [ esp + 0x4 ], 0x8048ec4 ; "new_file fopen"
0x8048b25:   c7 04 24 01 00 00 00      	mov dword [ esp ], 0x1
0x8048b2c:   e8 bf fa ff ff            	call 0x80485f0 <err>
0x8048b31:   8b 45 f4                  	mov eax, dword [ ebp + 0xfffffff4 ]
0x8048b34:   89 44 24 04               	mov dword [ esp + 0x4 ], eax
0x8048b38:   8b 45 0c                  	mov eax, dword [ ebp + 0xc ]
0x8048b3b:   89 04 24                  	mov dword [ esp ], eax
0x8048b3e:   e8 5d fb ff ff            	call 0x80486a0 <fputs>
0x8048b43:   83 f8 ff                  	cmp eax, 0xffffffff
0x8048b46:   75 14                     	jnz 0x8048b5c <new_file+0x61>
0x8048b48:   c7 44 24 04 d3 8e 04 08   	mov dword [ esp + 0x4 ], 0x8048ed3 ; "new_file fputs"
0x8048b50:   c7 04 24 01 00 00 00      	mov dword [ esp ], 0x1
0x8048b57:   e8 94 fa ff ff            	call 0x80485f0 <err>
0x8048b5c:   8b 45 f4                  	mov eax, dword [ ebp + 0xfffffff4 ]
0x8048b5f:   89 04 24                  	mov dword [ esp ], eax
0x8048b62:   e8 69 fa ff ff            	call 0x80485d0 <fclose>
0x8048b67:   83 f8 ff                  	cmp eax, 0xffffffff
0x8048b6a:   75 14                     	jnz 0x8048b80 <new_file+0x85>
0x8048b6c:   c7 44 24 04 e2 8e 04 08   	mov dword [ esp + 0x4 ], 0x8048ee2 ; "new_file fclose"
0x8048b74:   c7 04 24 01 00 00 00      	mov dword [ esp ], 0x1
0x8048b7b:   e8 70 fa ff ff            	call 0x80485f0 <err>
0x8048b80:   c9                        	leave
0x8048b81:   c3                        	ret
; function: read_file at 0x8048b82 -- 0x8048c23
0x8048b82:   55                        	push ebp
0x8048b83:   89 e5                     	mov ebp, esp
0x8048b85:   81 ec 28 01 00 00         	sub esp, 0x128
0x8048b8b:   c7 44 24 04 f2 8e 04 08   	mov dword [ esp + 0x4 ], 0x8048ef2
0x8048b93:   8b 45 08                  	mov eax, dword [ ebp + 0x8 ]
0x8048b96:   89 04 24                  	mov dword [ esp ], eax
0x8048b99:   e8 b2 fa ff ff            	call 0x8048650 <fopen>
0x8048b9e:   89 45 f4                  	mov dword [ ebp + 0xfffffff4 ], eax
0x8048ba1:   83 7d f4 00               	cmp dword [ ebp + 0xfffffff4 ], 0x0
0x8048ba5:   75 14                     	jnz 0x8048bbb <read_file+0x39>
0x8048ba7:   c7 44 24 04 f4 8e 04 08   	mov dword [ esp + 0x4 ], 0x8048ef4 ; "read_file fopen"
0x8048baf:   c7 04 24 01 00 00 00      	mov dword [ esp ], 0x1
0x8048bb6:   e8 35 fa ff ff            	call 0x80485f0 <err>
0x8048bbb:   8b 45 f4                  	mov eax, dword [ ebp + 0xfffffff4 ]
0x8048bbe:   89 44 24 08               	mov dword [ esp + 0x8 ], eax
0x8048bc2:   c7 44 24 04 fe 00 00 00   	mov dword [ esp + 0x4 ], 0xfe
0x8048bca:   8d 85 f5 fe ff ff         	lea eax, dword [ ebp + 0xfffffef5 ]
0x8048bd0:   89 04 24                  	mov dword [ esp ], eax
0x8048bd3:   e8 e8 f9 ff ff            	call 0x80485c0 <fgets>
0x8048bd8:   85 c0                     	test eax, eax
0x8048bda:   75 14                     	jnz 0x8048bf0 <read_file+0x6e>
0x8048bdc:   c7 44 24 04 04 8f 04 08   	mov dword [ esp + 0x4 ], 0x8048f04 ; "read_file fgets"
0x8048be4:   c7 04 24 01 00 00 00      	mov dword [ esp ], 0x1
0x8048beb:   e8 00 fa ff ff            	call 0x80485f0 <err>
0x8048bf0:   8b 45 f4                  	mov eax, dword [ ebp + 0xfffffff4 ]
0x8048bf3:   89 04 24                  	mov dword [ esp ], eax
0x8048bf6:   e8 d5 f9 ff ff            	call 0x80485d0 <fclose>
0x8048bfb:   83 f8 ff                  	cmp eax, 0xffffffff
0x8048bfe:   75 14                     	jnz 0x8048c14 <read_file+0x92>
0x8048c00:   c7 44 24 04 14 8f 04 08   	mov dword [ esp + 0x4 ], 0x8048f14 ; "read_file fclose"
0x8048c08:   c7 04 24 01 00 00 00      	mov dword [ esp ], 0x1
0x8048c0f:   e8 dc f9 ff ff            	call 0x80485f0 <err>
0x8048c14:   8d 85 f5 fe ff ff         	lea eax, dword [ ebp + 0xfffffef5 ]
0x8048c1a:   89 04 24                  	mov dword [ esp ], eax
0x8048c1d:   e8 8e f9 ff ff            	call 0x80485b0 <strdup>
0x8048c22:   c9                        	leave
0x8048c23:   c3                        	ret
; function: main at 0x8048c24 -- 0x8048c4f
0x8048c24:   55                        	push ebp
0x8048c25:   89 e5                     	mov ebp, esp
0x8048c27:   83 e4 f0                  	and esp, 0xfffffff0
0x8048c2a:   83 ec 10                  	sub esp, 0x10
0x8048c2d:   c7 04 24 25 8f 04 08      	mov dword [ esp ], 0x8048f25 ; "../append/"
0x8048c34:   e8 a7 f9 ff ff            	call 0x80485e0 <chdir>
0x8048c39:   e8 70 fc ff ff            	call 0x80488ae <service_example>
0x8048c3e:   b8 00 00 00 00            	mov eax, 0x0
0x8048c43:   c9                        	leave
0x8048c44:   c3                        	ret
0x8048c45:   66 90                     	xchg ax, ax
0x8048c47:   66 90                     	xchg ax, ax
0x8048c49:   66 90                     	xchg ax, ax
0x8048c4b:   66 90                     	xchg ax, ax
0x8048c4d:   66 90                     	xchg ax, ax
0x8048c4f:   90                        	nop
; function: __libc_csu_init at 0x8048c50 -- 0x8048cb0
0x8048c50:   55                        	push ebp
0x8048c51:   57                        	push edi
0x8048c52:   31 ff                     	xor edi, edi
0x8048c54:   56                        	push esi
0x8048c55:   53                        	push ebx
0x8048c56:   e8 95 fa ff ff            	call 0x80486f0 <__x86.get_pc_thunk.bx>
0x8048c5b:   81 c3 f9 15 00 00         	add ebx, 0x15f9
0x8048c61:   83 ec 1c                  	sub esp, 0x1c
0x8048c64:   8b 6c 24 30               	mov ebp, dword [ esp + 0x30 ]
0x8048c68:   8d b3 0c ff ff ff         	lea esi, dword [ ebx + 0xffffff0c ]
0x8048c6e:   e8 cd f8 ff ff            	call 0x8048540 <_init>
0x8048c73:   8d 83 08 ff ff ff         	lea eax, dword [ ebx + 0xffffff08 ]
0x8048c79:   29 c6                     	sub esi, eax
0x8048c7b:   c1 fe 02                  	sar esi, 0x2
0x8048c7e:   85 f6                     	test esi, esi
0x8048c80:   74 27                     	jz 0x8048ca9 <__libc_csu_init+0x59>
0x8048c82:   8d b6 00 00 00 00         	lea esi, dword [ esi + 0x0 ]
0x8048c88:   8b 44 24 38               	mov eax, dword [ esp + 0x38 ]
0x8048c8c:   89 2c 24                  	mov dword [ esp ], ebp
0x8048c8f:   89 44 24 08               	mov dword [ esp + 0x8 ], eax
0x8048c93:   8b 44 24 34               	mov eax, dword [ esp + 0x34 ]
0x8048c97:   89 44 24 04               	mov dword [ esp + 0x4 ], eax
0x8048c9b:   ff 94 bb 08 ff ff ff      	call dword [ ebx + edi * 0x2 + 0xffffff08 ]
0x8048ca2:   83 c7 01                  	add edi, 0x1
0x8048ca5:   39 f7                     	cmp edi, esi
0x8048ca7:   75 df                     	jnz 0x8048c88 <__libc_csu_init+0x38>
0x8048ca9:   83 c4 1c                  	add esp, 0x1c
0x8048cac:   5b                        	pop ebx
0x8048cad:   5e                        	pop esi
0x8048cae:   5f                        	pop edi
0x8048caf:   5d                        	pop ebp
0x8048cb0:   c3                        	ret
; function: function_8048cb1 at 0x8048cb1 -- 0x8048cbf
0x8048cb1:   eb 0d                     	jmp 0x8048cc0 <__libc_csu_fini>
0x8048cb3:   90                        	nop
0x8048cb4:   90                        	nop
0x8048cb5:   90                        	nop
0x8048cb6:   90                        	nop
0x8048cb7:   90                        	nop
0x8048cb8:   90                        	nop
0x8048cb9:   90                        	nop
0x8048cba:   90                        	nop
0x8048cbb:   90                        	nop
0x8048cbc:   90                        	nop
0x8048cbd:   90                        	nop
0x8048cbe:   90                        	nop
0x8048cbf:   90                        	nop
; function: __libc_csu_fini at 0x8048cc0 -- 0x8048cc1
0x8048cc0:   f3 c3                     	rep ret
; section: .fini
; function: _fini at 0x8048cc4 -- 0x8048cd7
0x8048cc4:   53                        	push ebx
0x8048cc5:   83 ec 08                  	sub esp, 0x8
0x8048cc8:   e8 23 fa ff ff            	call 0x80486f0 <__x86.get_pc_thunk.bx>
0x8048ccd:   81 c3 87 15 00 00         	add ebx, 0x1587
0x8048cd3:   83 c4 08                  	add esp, 0x8
0x8048cd6:   5b                        	pop ebx
0x8048cd7:   c3                        	ret

;;
;; Data Segment
;;

; section: .interp
0x8048134:   2f 6c 69 62 2f 6c 64 2d  6c 69 6e 75 78 2e 73 6f   |/lib/ld-linux.so|
0x8048144:   2e 32 00                                           |.2.             |
; section: .gnu.hash
0x804818c:   03 00 00 00 15 00 00 00  01 00 00 00 05 00 00 00   |................|
0x804819c:   80 2b 00 20 15 00 00 00  16 00 00 00 00 00 00 00   |.+. ............|
0x80481ac:   29 1d 8c 1c ac 4b e3 c0  67 55 61 10               |)....K..gUa.    |
; section: .dynsym
0x80481b8:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x80481c8:   91 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481d8:   22 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |"...............|
0x80481e8:   1a 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80481f8:   4c 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |L...............|
0x8048208:   61 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |a...............|
0x8048218:   81 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048228:   6e 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |n...............|
0x8048238:   88 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048248:   7c 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   ||...............|
0x8048258:   b0 00 00 00 00 00 00 00  00 00 00 00 20 00 00 00   |............ ...|
0x8048268:   67 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |g...............|
0x8048278:   98 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048288:   aa 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x8048298:   29 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |)...............|
0x80482a8:   3e 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |>...............|
0x80482b8:   8c 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |................|
0x80482c8:   21 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |!...............|
0x80482d8:   2f 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |/...............|
0x80482e8:   7b 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |{...............|
0x80482f8:   53 00 00 00 00 00 00 00  00 00 00 00 12 00 00 00   |S...............|
0x8048308:   74 00 00 00 e0 a2 04 08  04 00 00 00 11 00 19 00   |t...............|
0x8048318:   0b 00 00 00 dc 8c 04 08  04 00 00 00 11 00 0f 00   |................|
0x8048328:   46 00 00 00 c0 a2 04 08  04 00 00 00 11 00 19 00   |F...............|
; section: .dynstr
0x8048338:   00 6c 69 62 63 2e 73 6f  2e 36 00 5f 49 4f 5f 73   |.libc.so.6._IO_s|
0x8048348:   74 64 69 6e 5f 75 73 65  64 00 66 66 6c 75 73 68   |tdin_used.fflush|
0x8048358:   00 73 70 72 69 6e 74 66  00 66 6f 70 65 6e 00 5f   |.sprintf.fopen._|
0x8048368:   5f 69 73 6f 63 39 39 5f  73 63 61 6e 66 00 70 75   |_isoc99_scanf.pu|
0x8048378:   74 63 68 61 72 00 73 74  64 69 6e 00 73 74 72 64   |tchar.stdin.strd|
0x8048388:   75 70 00 5f 5f 61 73 73  65 72 74 5f 66 61 69 6c   |up.__assert_fail|
0x8048398:   00 66 67 65 74 73 00 73  74 72 6c 65 6e 00 63 68   |.fgets.strlen.ch|
0x80483a8:   64 69 72 00 73 74 64 6f  75 74 00 66 70 75 74 73   |dir.stdout.fputs|
0x80483b8:   00 66 63 6c 6f 73 65 00  65 72 72 00 65 72 72 78   |.fclose.err.errx|
0x80483c8:   00 73 74 72 63 6d 70 00  5f 5f 6c 69 62 63 5f 73   |.strcmp.__libc_s|
0x80483d8:   74 61 72 74 5f 6d 61 69  6e 00 77 72 69 74 65 00   |tart_main.write.|
0x80483e8:   5f 5f 67 6d 6f 6e 5f 73  74 61 72 74 5f 5f 00 47   |__gmon_start__.G|
0x80483f8:   4c 49 42 43 5f 32 2e 37  00 47 4c 49 42 43 5f 32   |LIBC_2.7.GLIBC_2|
0x8048408:   2e 31 00 47 4c 49 42 43  5f 32 2e 30 00            |.1.GLIBC_2.0.   |
; section: .gnu.version
0x8048416:   00 00 02 00 02 00 02 00  02 00 02 00 03 00 02 00   |................|
0x8048426:   02 00 02 00 00 00 02 00  02 00 02 00 03 00 02 00   |................|
0x8048436:   02 00 02 00 04 00 02 00  02 00 02 00 01 00 02 00   |................|
; section: .gnu.version_r
0x8048448:   01 00 03 00 01 00 00 00  10 00 00 00 00 00 00 00   |................|
0x8048458:   17 69 69 0d 00 00 04 00  bf 00 00 00 10 00 00 00   |.ii.............|
0x8048468:   11 69 69 0d 00 00 03 00  c9 00 00 00 10 00 00 00   |.ii.............|
0x8048478:   10 69 69 0d 00 00 02 00  d3 00 00 00 00 00 00 00   |.ii.............|
; section: .rel.dyn
0x8048488:   50 a2 04 08 06 0a 00 00  c0 a2 04 08 05 17 00 00   |P...............|
0x8048498:   e0 a2 04 08 05 15 00 00                            |........        |
; section: .rel.plt
0x80484a0:   60 a2 04 08 07 01 00 00  64 a2 04 08 07 02 00 00   |`.......d.......|
0x80484b0:   68 a2 04 08 07 03 00 00  6c a2 04 08 07 04 00 00   |h.......l.......|
0x80484c0:   70 a2 04 08 07 05 00 00  74 a2 04 08 07 06 00 00   |p.......t.......|
0x80484d0:   78 a2 04 08 07 07 00 00  7c a2 04 08 07 08 00 00   |x.......|.......|
0x80484e0:   80 a2 04 08 07 09 00 00  84 a2 04 08 07 0a 00 00   |................|
0x80484f0:   88 a2 04 08 07 0b 00 00  8c a2 04 08 07 0c 00 00   |................|
0x8048500:   90 a2 04 08 07 0d 00 00  94 a2 04 08 07 0e 00 00   |................|
0x8048510:   98 a2 04 08 07 0f 00 00  9c a2 04 08 07 10 00 00   |................|
0x8048520:   a0 a2 04 08 07 11 00 00  a4 a2 04 08 07 12 00 00   |................|
0x8048530:   a8 a2 04 08 07 13 00 00  ac a2 04 08 07 14 00 00   |................|
; section: .rodata
0x8048cd8:   03 00 00 00 01 00 02 00                            |........        |
0x8048ce0:   75 74 69 6c 73 2e 68 00                            |utils.h.        |   "utils.h"
0x8048ce8:   6c 65 6e 20 3c 3d 20 32  31 34 37 34 38 33 36 34   |len <= 214748364|   "len <= 2147483647L"
0x8048cf8:   37 4c 00                                           |7L.             |
0x8048cfb:   57 72 69 74 65 20 65 72  72 6f 72 21 00            |Write error!.   |   "Write error!"
0x8048d08:   43 6f 75 6c 64 6e 27 74  20 77 72 69 74 65 20 61   |Couldn't write a|   "Couldn't write all the data!"
0x8048d18:   6c 6c 20 74 68 65 20 64  61 74 61 21 00            |ll the data!.   |
0x8048d25:   00 00 00                                           |...             |
0x8048d28:   48 69 21 20 57 65 6c 63  6f 6d 65 20 74 6f 20 6f   |Hi! Welcome to o|   "Hi! Welcome to our note storage service"
0x8048d38:   75 72 20 6e 6f 74 65 20  73 74 6f 72 61 67 65 20   |ur note storage |
0x8048d48:   73 65 72 76 69 63 65 00                            |service.        |
0x8048d50:   57 61 6e 74 20 74 6f 20  28 52 29 65 61 64 20 6f   |Want to (R)ead o|   "Want to (R)ead or (W)rite a note?"
0x8048d60:   72 20 28 57 29 72 69 74  65 20 61 20 6e 6f 74 65   |r (W)rite a note|
0x8048d70:   3f 00                                              |?.              |
0x8048d72:   00 00                                              |..              |
0x8048d74:   57 68 61 74 20 77 61 73  20 74 68 61 74 3f 3f 3f   |What was that???|   "What was that??? I don't know what that means!\n"
0x8048d84:   20 49 20 64 6f 6e 27 74  20 6b 6e 6f 77 20 77 68   | I don't know wh|
0x8048d94:   61 74 20 74 68 61 74 20  6d 65 61 6e 73 21 0a 00   |at that means!..|
0x8048da4:   50 6c 65 61 73 65 20 73  65 6e 64 3a 20 6e 6f 74   |Please send: not|   "Please send: note_id password"
0x8048db4:   65 5f 69 64 20 70 61 73  73 77 6f 72 64 00         |e_id password.  |
0x8048dc2:   25 75 20 25 32 30 30 73  00                        |%u %200s.       |   "%u %200s"
0x8048dcb:   43 61 6e 27 74 20 70 61  72 73 65 20 79 6f 20 73   |Can't parse yo s|   "Can't parse yo stuff!\n"
0x8048ddb:   74 75 66 66 21 0a 00                               |tuff!..         |
0x8048de2:   25 75 5f 70 61 73 73 77  6f 72 64 00               |%u_password.    |   "%u_password"
0x8048dee:   45 72 72 72 2c 20 57 72  6f 6e 67 20 70 61 73 73   |Errr, Wrong pass|   "Errr, Wrong password!\n"
0x8048dfe:   77 6f 72 64 21 0a 00                               |word!..         |
0x8048e05:   25 75 00                                           |%u.             |   "%u"
0x8048e08:   4e 6f 74 65 20 63 6f 6e  74 65 6e 74 3a 20 00      |Note content: . |   "Note content: "
0x8048e17:   00                                                 |.               |
0x8048e18:   50 6c 65 61 73 65 20 73  65 6e 64 3a 20 6e 6f 74   |Please send: not|   "Please send: note_id password content"
0x8048e28:   65 5f 69 64 20 70 61 73  73 77 6f 72 64 20 63 6f   |e_id password co|
0x8048e38:   6e 74 65 6e 74 00                                  |ntent.          |
0x8048e3e:   00 00                                              |..              |
0x8048e40:   54 68 65 20 6e 6f 74 65  5f 69 64 20 69 73 20 61   |The note_id is a|   "The note_id is an number. No extra whitespace !!"
0x8048e50:   6e 20 6e 75 6d 62 65 72  2e 20 4e 6f 20 65 78 74   |n number. No ext|
0x8048e60:   72 61 20 77 68 69 74 65  73 70 61 63 65 20 21 21   |ra whitespace !!|
0x8048e70:   00                                                 |.               |
0x8048e71:   25 75 20 25 35 30 73 20  25 35 30 73 00            |%u %50s %50s.   |   "%u %50s %50s"
0x8048e7e:   43 61 6e 27 74 20 70 61  72 73 65 20 74 68 69 73   |Can't parse this|   "Can't parse this!\n"
0x8048e8e:   21 0a 00                                           |!..             |
0x8048e91:   00 00 00                                           |...             |
0x8048e94:   59 6f 75 72 20 6e 6f 74  65 20 69 73 20 28 68 6f   |Your note is (ho|   "Your note is (hopefully) safe with us! Bye!\n"
0x8048ea4:   70 65 66 75 6c 6c 79 29  20 73 61 66 65 20 77 69   |pefully) safe wi|
0x8048eb4:   74 68 20 75 73 21 20 42  79 65 21 0a 00            |th us! Bye!..   |
0x8048ec1:   77 78 00                                           |wx.             |   "wx"
0x8048ec4:   6e 65 77 5f 66 69 6c 65  20 66 6f 70 65 6e 00      |new_file fopen. |   "new_file fopen"
0x8048ed3:   6e 65 77 5f 66 69 6c 65  20 66 70 75 74 73 00      |new_file fputs. |   "new_file fputs"
0x8048ee2:   6e 65 77 5f 66 69 6c 65  20 66 63 6c 6f 73 65 00   |new_file fclose.|   "new_file fclose"
0x8048ef2:   72 00                                              |r.              |
0x8048ef4:   72 65 61 64 5f 66 69 6c  65 20 66 6f 70 65 6e 00   |read_file fopen.|   "read_file fopen"
0x8048f04:   72 65 61 64 5f 66 69 6c  65 20 66 67 65 74 73 00   |read_file fgets.|   "read_file fgets"
0x8048f14:   72 65 61 64 5f 66 69 6c  65 20 66 63 6c 6f 73 65   |read_file fclose|   "read_file fclose"
0x8048f24:   00                                                 |.               |
0x8048f25:   2e 2e 2f 61 70 70 65 6e  64 2f 00                  |../append/.     |   "../append/"
0x8048f30:   70 61 72 74 69 61 6c 5f  77 72 69 74 65 00         |partial_write.  |   "partial_write"
; section: .eh_frame_hdr
0x8048f40:   01 1b 03 3b 68 00 00 00  0c 00 00 00 30 f6 ff ff   |...;h.......0...|
0x8048f50:   84 00 00 00 7d f8 ff ff  a8 00 00 00 17 f9 ff ff   |....}...........|
0x8048f60:   c8 00 00 00 4c f9 ff ff  e8 00 00 00 6e f9 ff ff   |....L.......n...|
0x8048f70:   08 01 00 00 e1 f9 ff ff  28 01 00 00 e1 fa ff ff   |........(.......|
0x8048f80:   48 01 00 00 bb fb ff ff  68 01 00 00 42 fc ff ff   |H.......h...B...|
0x8048f90:   88 01 00 00 e4 fc ff ff  a8 01 00 00 10 fd ff ff   |................|
0x8048fa0:   c8 01 00 00 80 fd ff ff  04 02 00 00               |............    |
; section: .eh_frame
0x8048fac:   14 00 00 00 00 00 00 00  01 7a 52 00 01 7c 08 01   |.........zR..|..|
0x8048fbc:   1b 0c 04 04 88 01 00 00  20 00 00 00 1c 00 00 00   |........ .......|
0x8048fcc:   a4 f5 ff ff 50 01 00 00  00 0e 08 46 0e 0c 4a 0f   |....P......F..J.|
0x8048fdc:   0b 74 04 78 00 3f 1a 3b  2a 32 24 22 1c 00 00 00   |.t.x.?.;*2$"....|
0x8048fec:   40 00 00 00 cd f7 ff ff  9a 00 00 00 00 41 0e 08   |@............A..|
0x8048ffc:   85 02 42 0d 05 02 96 c5  0c 04 04 00 1c 00 00 00   |..B.............|
0x804900c:   60 00 00 00 47 f8 ff ff  35 00 00 00 00 41 0e 08   |`...G...5....A..|
0x804901c:   85 02 42 0d 05 71 c5 0c  04 04 00 00 1c 00 00 00   |..B..q..........|
0x804902c:   80 00 00 00 5c f8 ff ff  22 00 00 00 00 41 0e 08   |....\..."....A..|
0x804903c:   85 02 42 0d 05 5e c5 0c  04 04 00 00 1c 00 00 00   |..B..^..........|
0x804904c:   a0 00 00 00 5e f8 ff ff  73 00 00 00 00 41 0e 08   |....^...s....A..|
0x804905c:   85 02 42 0d 05 02 6f c5  0c 04 04 00 1c 00 00 00   |..B...o.........|
0x804906c:   c0 00 00 00 b1 f8 ff ff  00 01 00 00 00 41 0e 08   |.............A..|
0x804907c:   85 02 42 0d 05 02 fc c5  0c 04 04 00 1c 00 00 00   |..B.............|
0x804908c:   e0 00 00 00 91 f9 ff ff  da 00 00 00 00 41 0e 08   |.............A..|
0x804909c:   85 02 42 0d 05 02 d6 c5  0c 04 04 00 1c 00 00 00   |..B.............|
0x80490ac:   00 01 00 00 4b fa ff ff  87 00 00 00 00 41 0e 08   |....K........A..|
0x80490bc:   85 02 42 0d 05 02 83 c5  0c 04 04 00 1c 00 00 00   |..B.............|
0x80490cc:   20 01 00 00 b2 fa ff ff  a2 00 00 00 00 41 0e 08   | ............A..|
0x80490dc:   85 02 42 0d 05 02 9e c5  0c 04 04 00 1c 00 00 00   |..B.............|
0x80490ec:   40 01 00 00 34 fb ff ff  21 00 00 00 00 41 0e 08   |@...4...!....A..|
0x80490fc:   85 02 42 0d 05 5d c5 0c  04 04 00 00 38 00 00 00   |..B..]......8...|
0x804910c:   60 01 00 00 40 fb ff ff  61 00 00 00 00 41 0e 08   |`...@...a....A..|
0x804911c:   85 02 41 0e 0c 87 03 43  0e 10 86 04 41 0e 14 83   |..A....C....A...|
0x804912c:   05 4e 0e 30 02 48 0e 14  41 c3 0e 10 41 c6 0e 0c   |.N.0.H..A...A...|
0x804913c:   41 c7 0e 08 41 c5 0e 04  10 00 00 00 9c 01 00 00   |A...A...........|
0x804914c:   74 fb ff ff 02 00 00 00  00 00 00 00 00 00 00 00   |t...............|
; section: .init_array
0x804a15c:   90 87 04 08                                        |....            |
; section: .fini_array
0x804a160:   70 87 04 08                                        |p...            |
; section: .jcr
0x804a164:   00 00 00 00                                        |....            |
; section: .dynamic
0x804a168:   01 00 00 00 01 00 00 00  0c 00 00 00 40 85 04 08   |............@...|
0x804a178:   0d 00 00 00 c4 8c 04 08  19 00 00 00 5c a1 04 08   |............\...|
0x804a188:   1b 00 00 00 04 00 00 00  1a 00 00 00 60 a1 04 08   |............`...|
0x804a198:   1c 00 00 00 04 00 00 00  f5 fe ff 6f 8c 81 04 08   |...........o....|
0x804a1a8:   05 00 00 00 38 83 04 08  06 00 00 00 b8 81 04 08   |....8...........|
0x804a1b8:   0a 00 00 00 dd 00 00 00  0b 00 00 00 10 00 00 00   |................|
0x804a1c8:   15 00 00 00 00 00 00 00  03 00 00 00 54 a2 04 08   |............T...|
0x804a1d8:   02 00 00 00 a0 00 00 00  14 00 00 00 11 00 00 00   |................|
0x804a1e8:   17 00 00 00 a0 84 04 08  11 00 00 00 88 84 04 08   |................|
0x804a1f8:   12 00 00 00 18 00 00 00  13 00 00 00 08 00 00 00   |................|
0x804a208:   fe ff ff 6f 48 84 04 08  ff ff ff 6f 01 00 00 00   |...oH......o....|
0x804a218:   f0 ff ff 6f 16 84 04 08  00 00 00 00 00 00 00 00   |...o............|
0x804a228:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a238:   00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00   |................|
0x804a248:   00 00 00 00 00 00 00 00                            |........        |
; section: .got
0x804a250:   00 00 00 00                                        |....            |
; section: .got.plt
0x804a254:   68 a1 04 08 00 00 00 00  00 00 00 00 86 85 04 08   |h...............|
0x804a264:   96 85 04 08 a6 85 04 08  b6 85 04 08 c6 85 04 08   |................|
0x804a274:   d6 85 04 08 e6 85 04 08  f6 85 04 08 06 86 04 08   |................|
0x804a284:   16 86 04 08 26 86 04 08  36 86 04 08 46 86 04 08   |....&...6...F...|
0x804a294:   56 86 04 08 66 86 04 08  76 86 04 08 86 86 04 08   |V...f...v.......|
0x804a2a4:   96 86 04 08 a6 86 04 08  b6 86 04 08               |............    |
; section: .data
0x804a2b0:   00 00 00 00 00 00 00 00                            |........        |
